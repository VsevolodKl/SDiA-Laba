#include <iostream>
#include <vector>
using namespace std;

/**
 * Функция сортировки пузырьком (Bubble Sort)
 * Алгоритм: последовательно сравнивает соседние элементы и меняет их местами,
 * если они находятся в неправильном порядке. Процесс повторяется до полной сортировки.
 * 
 * @param arr - вектор для сортировки (передается по ссылке)
 */
void bubbleSort(vector<int>& arr) {
    int n = arr.size();
    
    // Внешний цикл: количество проходов по массиву
    for (int i = 0; i < n - 1; i++) {
        // Флаг для оптимизации - если обменов не было, массив уже отсортирован
        bool swapped = false;
        
        // Внутренний цикл: проходим по неотсортированной части массива
        // После каждого прохода самый большой элемент "всплывает" в конец
        for (int j = 0; j < n - i - 1; j++) {
            // Сравниваем соседние элементы
            if (arr[j] > arr[j + 1]) {
                // Меняем местами, если они в неправильном порядке
                swap(arr[j], arr[j + 1]);
                swapped = true; // Запоминаем, что был обмен
            }
        }
        
        // Вывод промежуточного состояния (для наглядности)
        cout << "После прохода " << i + 1 << ": ";
        for (int num : arr) {
            cout << num << " ";
        }
        cout << endl;
        
        // Если не было обменов, массив уже отсортирован - выходим
        if (!swapped) {
            cout << "Массив отсортирован досрочно!" << endl;
            break;
        }
    }
}

/**
 * Вспомогательная функция для вывода массива
 */
void printArray(const vector<int>& arr) {
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;
}

/**
 * Демонстрация процесса сортировки с подробными комментариями
 */
void demonstrateBubbleSort() {
    vector<int> arr = {5, 2, 8, 1, 9, 3};
    
    cout << "ДЕМОНСТРАЦИЯ СОРТИРОВКИ ПУЗЫРЬКОМ" << endl;
    cout << "================================" << endl;
    cout << "Принцип работы:" << endl;
    cout << "1. Сравниваем соседние элементы" << endl;
    cout << "2. Если левый больше правого - меняем местами" << endl;
    cout << "3. Самый большой элемент 'всплывает' в конец" << endl;
    cout << "4. Повторяем для оставшейся части" << endl << endl;
    
    cout << "Исходный массив: ";
    printArray(arr);
    cout << endl;
    
    bubbleSort(arr);
    
    cout << "\nФинальный отсортированный массив: ";
    printArray(arr);
}

int main() {
    demonstrateBubbleSort();
    
    // Дополнительный пример
    cout << "\n--- Дополнительный пример ---" << endl;
    vector<int> arr2 = {64, 34, 25, 12, 22, 11, 90};
    cout << "Исходный массив: ";
    printArray(arr2);
    
    bubbleSort(arr2);
    cout << "Отсортированный массив: ";
    printArray(arr2);
    
    return 0;
}
